<h1>事件委托代码分析</h1>
<h2>什么是事件委托：通俗的讲，事件就是onclick，onmouseover，onmouseout，等就是事件，委托呢，就是让别人来做，这个事件本来是加在某些元素上的，然而你却加到别人身上来做，完成这个事件。
< /br>也就是：利用冒泡的原理，把事件加到父级上，触发执行效果。
< /br>好处呢：提高性能。</h2>
原始版本

<body>
<ul id="ull">
    <li>001fgb</li>
    <li>002fdv</li>
    <li>003vxv</li>
</ul>
<script>
window.onload = function(){
    var ull = document.getElementById("ull");
    var aLi = ull.getElementsByTagName("li");

    for(var i=0; i<aLi.length;i++){
        aLi[i].onmouseover = function(){
            this.style.background = "red";
        }
        aLi[i].onmouseout = function(){
            this.style.background = ""
        }
    }
}
</script>
</body>

利用事件委托
<script>
window.onload = function(){
    var ull = document.getElementById("ull");
    //var aLi = ull.getElementsByTagName("li");
/* 此时要用到的事件源 :event 对象
事件源不管在哪个事件中，只要你操作的那个元素就是事件源。
ie:window.event.srcElement
标准下:event.target
nodeName : 找到元素的标签名
 */
 ull.onmouseover = function(ev){
 var ev = ev||window.event;
 var target = ev.target||ev.srcElement;
 //alert(target.innerHTML);
     if(target.nodeName.toLowerCase()=="li"){
         target.style.background="red";
     }
 }
 ull.onmouseout = function(ev){
     var ev = ev||window.event;
     var target = ev.target || ev.srcElement;
     // alert(target.innerHTML);
     if(target.nodeName.toLowerCase()=="li"){
         target.style.background="";
     }
 }
}
</script>
